-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.5 from Parser.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parse -> Expr                               (0)
	Expr -> Words                                      (1)
	Expr -> word '=' Expr                              (2)
	Expr -> Expr ';' Expr                              (3)
	Expr -> '(' Expr ')'                               (4)
	Expr -> int                                        (5)
	Expr -> '"' word '"'                               (6)
	Words -> word Words                                (7)
	Words ->                                           (8)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'='            { TokAssign }
	';'            { TokSemi }
	'('            { TokLP }
	')'            { TokRP }
	'"'            { TokDQ }
	word           { TokWord $$ }
	int            { TokInt $$ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parse    rule  0
	Expr            rules 1, 2, 3, 4, 5, 6
	Words           rules 7, 8

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	';'            reduce using rule 8
	'('            shift, and enter state 5
	'"'            shift, and enter state 6
	word           shift, and enter state 7
	int            shift, and enter state 8
	%eof           reduce using rule 8

	Expr           goto state 4
	Words          goto state 2

State 1


	word           shift, and enter state 3

	Words          goto state 2

State 2

	Expr -> Words .                                     (rule 1)

	';'            reduce using rule 1
	')'            reduce using rule 1
	%eof           reduce using rule 1


State 3

	Words -> word . Words                               (rule 7)

	';'            reduce using rule 8
	')'            reduce using rule 8
	word           shift, and enter state 3
	%eof           reduce using rule 8

	Words          goto state 9

State 4

	%start_parse -> Expr .                              (rule 0)
	Expr -> Expr . ';' Expr                             (rule 3)

	';'            shift, and enter state 13
	%eof           accept


State 5

	Expr -> '(' . Expr ')'                              (rule 4)

	';'            reduce using rule 8
	'('            shift, and enter state 5
	')'            reduce using rule 8
	'"'            shift, and enter state 6
	word           shift, and enter state 7
	int            shift, and enter state 8

	Expr           goto state 12
	Words          goto state 2

State 6

	Expr -> '"' . word '"'                              (rule 6)

	word           shift, and enter state 11


State 7

	Expr -> word . '=' Expr                             (rule 2)
	Words -> word . Words                               (rule 7)

	'='            shift, and enter state 10
	';'            reduce using rule 8
	')'            reduce using rule 8
	word           shift, and enter state 3
	%eof           reduce using rule 8

	Words          goto state 9

State 8

	Expr -> int .                                       (rule 5)

	';'            reduce using rule 5
	')'            reduce using rule 5
	%eof           reduce using rule 5


State 9

	Words -> word Words .                               (rule 7)

	';'            reduce using rule 7
	')'            reduce using rule 7
	%eof           reduce using rule 7


State 10

	Expr -> word '=' . Expr                             (rule 2)

	';'            reduce using rule 8
	'('            shift, and enter state 5
	')'            reduce using rule 8
	'"'            shift, and enter state 6
	word           shift, and enter state 7
	int            shift, and enter state 8
	%eof           reduce using rule 8

	Expr           goto state 17
	Words          goto state 2

State 11

	Expr -> '"' word . '"'                              (rule 6)

	'"'            shift, and enter state 16


State 12

	Expr -> Expr . ';' Expr                             (rule 3)
	Expr -> '(' Expr . ')'                              (rule 4)

	';'            shift, and enter state 13
	')'            shift, and enter state 15


State 13

	Expr -> Expr ';' . Expr                             (rule 3)

	';'            reduce using rule 8
	'('            shift, and enter state 5
	')'            reduce using rule 8
	'"'            shift, and enter state 6
	word           shift, and enter state 7
	int            shift, and enter state 8
	%eof           reduce using rule 8

	Expr           goto state 14
	Words          goto state 2

State 14

	Expr -> Expr . ';' Expr                             (rule 3)
	Expr -> Expr ';' Expr .                             (rule 3)

	';'            reduce using rule 3
	')'            reduce using rule 3
	%eof           reduce using rule 3


State 15

	Expr -> '(' Expr ')' .                              (rule 4)

	';'            reduce using rule 4
	')'            reduce using rule 4
	%eof           reduce using rule 4


State 16

	Expr -> '"' word '"' .                              (rule 6)

	';'            reduce using rule 6
	')'            reduce using rule 6
	%eof           reduce using rule 6


State 17

	Expr -> word '=' Expr .                             (rule 2)
	Expr -> Expr . ';' Expr                             (rule 3)

	';'            reduce using rule 2
	')'            reduce using rule 2
	%eof           reduce using rule 2


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 9
Number of terminals: 7
Number of non-terminals: 3
Number of states: 18
